
/* Selectors and selector combinations (REMEMBER THAT RULE OF SPECIFICITY OVERRIDES!)*/
li { /* selects all lists */
    color:red
}

div li { /* selects just lists inside divs */
    color:blue
}
.isClass{ /* selects all .isclass elements */
    color: gold
}
div article p.isClass { /* selects just .isclass elements inside 
                        paragraph inside article inside div */
    color: green
}
div > p { /* selects just paragraph direct to div */
    color: purple
}

 #isId { /* selects just Id */
    color: orange
}



/* ************************** PSEUDO CLASS SELECTORS **************************

-> Meaning doesn't do the exact role, 
Eg: hover over link, visited link color (Not the action of going to the website) */
button{
    height: 50px; /*Needs semi colon to separate css code from bottom*/
    width: 100px;
}
button:hover {
    background-color:red; /*Needs semi colon to separate css code from bottom*/
    color: gold
}
a:hover {
    background-color:red; /*Needs semi colon to separate css code from bottom*/
    color: gold
}

#targetedByNth li:nth-child(odd){ /* nth-child allows the selection of a specific childs*/
    color: orchid
}

#targetedByNth li:nth-child(2):hover { /*can have double pseudos, in this case, we can use nth-child and hover*/
    background-color: blue ;
    width: 30px
}



/************************** CSS BOXES **************************/
*{
    box-sizing: border-box
}
#box{ /*box is the tag that surrounds its child(which is content)*/
    background-color: red; /*Since the box surrounds the content
                              its color defines the padding colour*/

    padding: 10px; /*padding is the SPACE right outside the content*/

    border: 10px solid black;/*border can be solid and surrounds padding*/

    margin: 0px 0px 0px 100px;/*margin is the SPACE right outside the border*/
    
    width: 300px /* width is typically defined just for the content, but 
                   setting it to the entire thing(including the border) 
                   is more accurate (This is done by using *{} to set the entire 
                   page to -> box-sizing: border-box) */

}
#content{
    background-color: green;

}
#box2{
    padding-left: 100px ; /*You can have specific spaces (top, bottom, left, right)*/
    border: 0px;
    margin: 0px;
    width: 300px;
    

}
#content2{
    background-color: green;
}


/*With overflowing text in box*/
#box3{
    
    background-color: blue;
    padding: 10px; 
    border: 5px solid black;
    margin-left: 500px;
    height: 150px;
    width: 150px;

    overflow: auto; /*For scrolling in a box with too much text
                    Good for saving space*/
    

}
#content3{
    background-color: green;
}


/************************** USING BOXES AND FLOATS TO MAKE TEXT SIDE BY SIDE ON PAGE **************************/

#sideBySide p{
    width: 50%;  /*This sets the boxes to be side by side because each takes up 50% of the screen*/
    border: 1px solid black; /*Needs *{border} to be side by side because 50% needs to account for the border too*/
    float: left; /*float makes it so boxes/elements ignore what's been floated and take their place (so side by side)*/
    padding: 10px; /*makes more space between the texts and border*/

    
}
#sbsp1{
    background-color:gold;
}
#sbsp2{
    background-color: green;
}

/************************** ABSOLUTE AND RELATIVE POSITIONING **************************/

/* relative positioning moves relative to the current position of the document
and the other elements still think it's there (unlike float)

/*absolute positioning moves relative to something else that has absolute or relative positioning
EG: if a banner has absolute positiong, then if the box's top and left are set to 0,0, then it will not
go to the top of the page but will go to the TOP OF THE BANNER
Additionally, the other elements/boxes will ignore the old position of the absolute positioning box (like float) */

#banner {
    background-color: lightgreen;
    width: 100%;
    height: 1000px;
    margin-top: 100px;
    position: relative; /*needs to be absolute for box 3*/
    overflow:auto
    
    
    
}
.movebox1{
    background-color: red;
    border: 5px solid  black;
    width: 200px;
    height:200px;

}
.movebox2{
    background-color: blue;
    border: 5px solid  black;
    width: 200px;
    height:200px;

}
.movebox3{
    background-color: gold;
    border: 5px solid  black;
    width: 200px;
    height:200px;

}


#colorBox1{
    background-color: red;
    border: 5px solid  black;
    width: 200px;
    height:200px;
    position: relative; /*needs to be relative positioning because it will be moved 
                        down and to the right RELATIVE to its CURRENT position*/
    animation: move1 3s ease;
    animation-fill-mode: forwards;

    
}

@keyframes move1{
    from{
    top: 0px; /*from the top*/
    left: 0px /*from the left*/

    }

    to{
    top: 215px; /*from the top*/
    left: 220px /*from the left*/
    }
}


#colorBox2{
    background-color: blue;
    border: 5px solid black;
    width: 200px;
    height:200px;
    position: absolute;
    animation: move2 3s ease;
    animation-fill-mode: forwards;
}
@keyframes move2{
    from{
        top: 350px;
        left:0px
    }
    to{
        top: 0px;
        left: 220px

    }
}

#colorBox3{
    background-color: gold;
    border: 5px solid black;
    width: 200px;
    height:200px;
    position: absolute; /*needs to be absolute positioning because it will be moved 
                       to the very top of the banner (not based on its current position)
                       
                       HOWEVER, you need to add absolute positioning to the BANNER  or else 
                       the box will go to the very top, because the webpage is defaulted at 
                       absolute (remember that absolute positioning is relative 
                       to another absolute or relative object, in this case the banner)*/
    animation: move3 3s ease;
    animation-fill-mode: forwards;
}
@keyframes move3{
    from{

        top: 430px; 
        left: 0px;
    }
    to{

        top: 0px; 
        left: 0px;
    }
}


#banner button{
    float:right;
    margin-right:50%;
    
    
}
#moveButton{
    margin-top: 300px;
}

#addButton, #deleteButton{

  top: -100px;
  left: 150px;

position: relative;
}



.newBox{
    background-color: red;
    border: 5px solid  black;
    width:  100px;
    height: 100px;
    float:left;
    margin: 10px;
    animation: imageIn 2s;
    animation-fill-mode: forwards;

}

@keyframes imageIn{
    from{
        opacity: 0
    }
    to{
        opacity: 1
    }
}
/************************** RESPONSIVE DESIGN (FITS ANY SCREEN) **************************/
@media (min-width: 1200px ){
    
    p{
        background-color: red;
    }
   
}



